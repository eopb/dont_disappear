
image: "rust:latest"

stages:
  - check
  - test
  - deploy-examples
  - publish
  - post-run

clean-code:
  stage: check
  script:
    - rustup component add rustfmt-preview
    - cargo fmt --all -- --check
  allow_failure: true


check-dont_disappear:
  stage: check
  script:
    -  cargo check


unittests:
  stage: test
  script:
    - cargo test

benchmarktests:
  stage: test
  script:
    - cargo bench


linux-optimized:
  stage: deploy-examples
  script:
    - apt-get update
    - rustup default nightly
    - rustup update
    - cargo build --examples --release
    - rm -r -f files
    - mkdir files
    - cp target/release/examples/any_key_to_continue files
    - cp target/release/examples/enter_to_continue files
    - cp target/release/examples/press_close files
  when: on_success
  artifacts:
    paths:
      - files
    expire_in: 2 weeks
  only:
    refs:
      - master
      - dev

windows-optimized:
  stage: deploy-examples
  script:
    - apt-get update
    - rustup default nightly
    - rustup update
    - apt-get install gcc -y
    - apt-get install gcc-mingw-w64-x86-64 -y
    - rustup component add rust-std --target=x86_64-pc-windows-gnu
    - mkdir .cargo
    - touch .cargo/config
    - echo [target.x86_64-pc-windows-gnu] >> .cargo/config
    - echo     linker = \"x86_64-w64-mingw32-gcc\" >> .cargo/config
    - echo     ar = \"x86_64-w64-mingw32-gcc-ar\" >> .cargo/config
    - cargo build --examples --release --target=x86_64-pc-windows-gnu
    - rm -r -f files
    - mkdir files
    - cp target/x86_64-pc-windows-gnu/release/examples/any_key_to_continue.exe files
    - cp target/x86_64-pc-windows-gnu/release/examples/enter_to_continue.exe files
    - cp target/x86_64-pc-windows-gnu/release/examples/press_close.exe files
  when: on_success
  artifacts:
    paths:
      - files
    expire_in: 2 weeks
  only:
    refs:
      - master
      - dev


docs:
  stage: publish
  script:
    - cargo doc --no-deps
    - rm -r -f docs
    - mkdir docs
    - cp -R target/doc docs
  when: on_success
  artifacts:
    paths:
      - docs
    expire_in: 2 weeks
  only:
    refs:
      - master
      - dev

cratesio:
  stage: publish
  script:
    - cargo login $CARGO_LOGIN
    - cargo package
    - cargo publish
  when: on_success
  only:
    refs:
      - master
  allow_failure: true


clippy:
  stage: post-run
  script:
    - rustup default nightly
    - rustup update
    - rustup component add clippy-preview
    - cargo clippy --all -- -D clippy::all
  allow_failure: true
